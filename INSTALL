#--------------------------------------------------------------------------------------
Installation Instructions
#--------------------------------------------------------------------------------------

VulaSHAKA (Simultaneous Neutronic, Fuel Performance, Heat And Kinetics Analysis)
Copyright (C) 2009-2010 Pebble Bed Modular Reactor (Pty) Limited (PBMR)

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

See https://vulashaka.svn.sourceforge.net/svnroot/vulashaka


#--------------------------------------------------------------------------------------
Pre-requisites
#--------------------------------------------------------------------------------------

"pyFoam" Python OpenFOAM binding requires the following mandatory and optional
pre-requisites.

* Make sure that confFoam (common configuration package) is installed 
  Can be found at https://csrcs.pbmr.co.za/svn/nea/prototypes/reaktor/conffoam.
  Please follow instructions from corresponding INSTALL file to setup confFoam
  in your environment.

* Make sure that OpenFOAM is installed (tested with versions 1.4.1-dev and 1.6).
  Please follow instructions from corresponding INSTALL file to setup OpenFOAM
  in your environment.

* Make sure that Python (developement version, with Python.h header file) is 
  installed (tested with 2.4, 2.6.2)
  Please follow instructions from http://www.python.org/ web-site.

* Make sure that SWIG is installed (tested with 1.3.36 - 1.3.40 )
  Please follow instructions from http://www.swig.org/ web-site.

* Install extFoam (optional)
  Can be found at https://csrcs.pbmr.co.za/svn/nea/prototypes/reaktor/extfoam.
  Please follow instructions from corresponding INSTALL file to setup extFoam
  in your environment.

* Install foam2vtk (optional)
  Can be found at https://csrcs.pbmr.co.za/svn/nea/prototypes/reaktor/foam2vtk.
  Please follow instructions from corresponding INSTALL file to setup foam2vtk
  in your environment.

* Install unv2foam (optional)
  Can be found at https://csrcs.pbmr.co.za/svn/nea/prototypes/reaktor/unv2foam.
  Please follow instructions from corresponding INSTALL file to setup unv2foam
  in your environment.

* Install Boost library (optional) (tested with 1.35.0 )
  Please follow instructions from http://www.boost.org/ web-site.

Then follow the instructions below in order to build and install the "pyFoam" - Python 
OpenFOAM binding.


#--------------------------------------------------------------------------------------
Basic Installation
#--------------------------------------------------------------------------------------

The build procedure of the "pyFoam" package is based on GNU autoconf and make utilities. 
In order to build the module you have to perform the following actions:

1. Start a new shell session (to ensure a clear environment).

2. Go to the source directory:

   cd <path to the sources>

3. Modify the provided "env.sh" file to adjust to your local environment.
   
   <your favorite editor> ./env.sh

4. Source this "env.sh" file to define corresponding build environment.

   source ./env.sh

5. Configuring the build system:

   build_configure
   ./configure

   Make sure that after each configuration step "--- OK ---" message is
   printed in your console.

   To see all applicable configuration options run "./configure --help"
   Currently, the following options are available:

      --disable-singlelib
      --enable-embeddedcxx
      --with-swig=<path>
      --with-python-includes=<path>
      --with-python-libraries=<path>
      --with-extfoam=<path>
      --with-vtk-includes=<path>
      --with-vtk-libraries=<path>
      --with-foam2vtk=<path>
      --with-unv2foam=<path>
      --with-boost-includes=<path>
      --with-boost-libraries=<path>

6. Build "pyFoam":

   make

  (use "make clean" command to cleanup the build folder)


#--------------------------------------------------------------------------------------
"pyFoam" environment
#--------------------------------------------------------------------------------------

Before start to use "pyFoam" it is necessary to source the generated "bashrc" file


#--------------------------------------------------------------------------------------
"pyFoam" installation check
#--------------------------------------------------------------------------------------

Run one of the "pyFoam" solvers on the appropriate OpenFOAM case, for example

  (for OpenFOAM-1.4.1-dev)
  ./Foam/applications/solvers/incompressible/icoFoam.py \
    ${WM_PROJECT_USER_DIR}/run/tutorials/icoFoam cavity

  (for OpenFOAM-1.6)
  ./Foam/applications/solvers/incompressible/icoFoam.py \
    -case ${WM_PROJECT_USER_DIR}/run/tutorials/incompressible/icoFoam/cavity

(use the same command line option as for referenced OpenFOAM implementation)


#--------------------------------------------------------------------------------------
