#!/bin/bash

## confFlu - pythonFlu configuration package
## Copyright (C) 2010- Alexey Petrov
## Copyright (C) 2009-2010 Pebble Bed Modular Reactor (Pty) Limited (PBMR)
## 
## This program is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
## 
## You should have received a copy of the GNU General Public License
## along with this program.  If not, see <http://www.gnu.org/licenses/>.
## 
## See http://sourceforge.net/projects/pythonflu
##
## Author : Alexey PETROV
##


#--------------------------------------------------------------------------------------
# Prepare variables for substition in  control,changelog etc files
os_name="opensuse@SUSE_VERSION@"

foam_package_suffix=@FOAM_PACKAGE_SUFFIX@
pythonflu_version=@PACKAGE_VERSION@

version_number_part=@VERSION_NUMBER_PART@

package_name="pythonflu${foam_package_suffix}"

build_version=@BUILD_VERSION@

package_version=${pythonflu_version}-${build_version}

curr_folder=@abs_top_builddir@
package_folder=${curr_folder}/${package_name}-${package_version}
template_folder=${curr_folder}/rpm-template


#--------------------------------------------------------------------------------------
# Prepare folder for deb-packaging and copy folder "Foam" to it 
# first cleaning package files, folders with the same name( ${package_name}-${package_version} ) from the last attempt
rm -rf ${package_name}-${package_version}*
rm -rf ${package_name}_${package_version}*

install -d ${package_folder}
echo "--------------------------------------------------------------------------------"
echo "Copying \"Foam\" to ${package_folder}"
echo "--------------------------------------------------------------------------------"
cp -rf Foam ${package_folder}
(cd ${package_folder} && mkdir admin)
cp -rf admin/pythonflu*.m4 ${package_folder}/admin


#--------------------------------------------------------------------------------------
# prepare external packages
if [ "@WITH_CONFFLU@" = "yes" ]; then
    if [ "x${CONFFLU_ROOT_DIR}" = "x" ]; then
       echo
       echo "$0: It is necessary to source CONFFLU" >&2
       exit 1
    fi
    
    echo "--------------------------------------------------------------------------------"
    echo "prepare confFlu..."
    echo "--------------------------------------------------------------------------------"
    mkdir ${package_folder}/confFlu
    mkdir ${package_folder}/confFlu/admin
    cp -rf ${CONFFLU_ROOT_DIR}/admin/confflu*.m4 ${package_folder}/confFlu/admin/
    cp -rf ${CONFFLU_ROOT_DIR}/build_configure ${package_folder}/confFlu/
    cp -rf ${CONFFLU_ROOT_DIR}/env.sh ${package_folder}/confFlu/bashrc 
fi

if [ "@WITH_SOLVERS@" = "yes" ]; then
    echo "--------------------------------------------------------------------------------"
    echo "prepare solvers & models..."
    
    solvers_folder=${package_folder}/solvers
    mkdir ${solvers_folder}
    
    ( cd ${solvers_folder} && wget https://afgan.svn.sourceforge.net/svnroot/afgan/pyfoam_testing/trunk/install_list.sh ) >/dev/null
    source ${solvers_folder}/install_list.sh
    install_list=`create_install_list`
    
    for package in ${install_list}; do  
       ( cd ${solvers_folder} && git clone git://github.com/asimurzin/${package}.git ${package} )
      #cp -rf solvers/${package} ${solvers_folder} 
    done
fi


#--------------------------------------------------------------------------------------
# remove all unnecessary from the ${package_folder}
echo "cleaning cxx, h, o, etc..."
echo "--------------------------------------------------------------------------------"
(cd ${package_folder} && find \( -name "*.h" \) -delete)
(cd ${package_folder} && find \( -name "*.cc" -o -name "*.exe" \) -delete)
(cd ${package_folder} && find \( -name "*.d" -o -name "*.o" -o -name "*.in" -o -name "Makefile" -o -name "*.pyc" \) -delete)
(cd ${package_folder} && find -name ".git" -exec rm -rf {} \; 2>/dev/null)


#--------------------------------------------------------------------------------------
#prepare to build rpm
rpm_package_folder="/usr/src/packages"
build_folder=${rpm_package_folder}/BUILD

echo "copy files to \"${build_folder}\""
echo "--------------------------------------------------------------------------------"

#copy solvers and libs to BUILD folder 
cp ${template_folder}/Makefile ${package_folder} 
( cd ${package_folder} && make preparation )
cp ${template_folder}/Makefile ${build_folder}/ 


#--------------------------------------------------------------------------------------
# create files list 

pythonflu_lib="/usr/local/lib/python@PYTHON_VERSION@/site-packages"

m4dir="/usr/local/share/pythonFlu"

files_list="files.txt"
( cd ${package_folder} && touch ${files_list} )

lib_files=`( cd ${build_folder} && find pythonFlu171-8.2-hybrid -type f )`
for file in ${lib_files}; do
   echo "${pythonflu_lib}/${file}" >> ${package_folder}/${files_list}
done

links=`( cd ${build_folder} && find pythonFlu171-8.2-hybrid -type l )`
for link in ${links}; do
   echo "${pythonflu_lib}/${link}" >> ${package_folder}/${files_list}
done

m4files=`( cd ${build_folder} && find admin -type f )`
for file in ${m4files}; do
   echo "${m4dir}/${file}" >> ${package_folder}/${files_list}
done

if [ "@WITH_SOLVERS@" = "yes" ]; then
  solvers_files=`( cd ${build_folder} && find solvers -type f )`
  for file in ${solvers_files}; do
     echo "/usr/local/share/pythonFlu/${file}" >> ${package_folder}/${files_list}
  done
fi

if [ "@WITH_CONFFLU@" = "yes" ]; then
  confflu_files=`( cd ${build_folder} && find confFlu -type f )`
  for file in ${confflu_files}; do
     echo "/usr/local/share/${file}" >> ${package_folder}/${files_list}
  done
fi

echo "--------------------------------------------------------------------------------"


#--------------------------------------------------------------------------------------
specs_folder=${rpm_package_folder}/SPECS
echo "copying ${package_name}.spec file to \"${specs_folder}\""

cp rpm-template/rpm.spec ${specs_folder}/${package_name}.spec

# to add to "spec" file files_list
cat ${package_folder}/${files_list} >> ${specs_folder}/${package_name}.spec

echo "--------------------------------------------------------------------------------"


#---------------------------------------------------------------------------------------
# copying readme, news and add it's to spec file
cp README INSTALL NEWS ${rpm_package_folder}/BUILD/
echo "%doc README INSTALL NEWS" >> ${specs_folder}/${package_name}.spec


#---------------------------------------------------------------------------------------
# create package and move it to working folder
echo "create package"
echo "--------------------------------------------------------------------------------"
rpmbuild -bb ${specs_folder}/${package_name}.spec
a_package_file=${rpm_package_folder}/RPMS/@OS_ARCHITECTURE@/${package_name}-${version_number_part}-${build_version}.@OS_ARCHITECTURE@.rpm
a_new_filename=${package_name}-${package_version}-${os_name}.@OS_ARCHITECTURE@.rpm
mv ${a_package_file} ${a_new_filename}


#---------------------------------------------------------------------------------------
# cleaning the building folder 
echo "--------------------------------------------------------------------------------"
echo "clean \"${rpm_package_folder}/BUILD\" folder"
( cd ${rpm_package_folder}/BUILD && rm -rf Foam solvers Makefile README INSTALL NEWS )
( cd ${specs_folder} && rm -f ${package_name}.spec )
echo "--------------------------------------------------------------------------------"

#---------------------------------------------------------------------------------------

